version: '3'
services:
  agent:
    image: "datadog/agent:6.11.0"
    environment:
      - DD_API_KEY
      - DD_APM_ENABLED=true
      - DD_PROCESS_AGENT_ENABLED=true
      - DD_TAGS='env:log-workshop'
    ports:
      - "8126:8126"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro
      - /etc/passwd:/etc/passwd:ro

  frontend:
    environment:
      - FLASK_APP=api.py
      - FLASK_DEBUG=1
      - DATADOG_SERVICE_NAME=iot-frontend
      - DATADOG_TRACE_AGENT_HOSTNAME=agent
      - DD_LOGS_INJECTION=true
      - DD_ANALYTICS_ENABLED=true
      - DATADOG_PATCH_MODULES=requests:true
    #build: .
    image: "burningion/distributed-tracing-workshop-frontend:latest"
    command: ddtrace-run flask run --port=5000 --host=0.0.0.0
    ports:
      - "5000:5000"
    volumes:
      - "./frontend:/app"
    depends_on:
      - agent
      - db

  noder:
    environment:
      - DD_SERVICE_NAME=users-api
      - DD_TRACE_AGENT_HOSTNAME=agent
      - DD_LOGS_INJECTION=true
      - DD_TRACE_ANALYTICS_ENABLED=true
    #build: ./node-api
    image: "burningion/distributed-tracing-workshop-node-api:latest"
    command: nodemon server.js
    ports:
      - "5004:5004"
    # uncomment below to live develop node
    #volumes:
    #  - "./node-api:/app"
    #  - /app/node_modules
    depends_on:
      - agent
      - frontend
      - redis

  pumps:
    environment:
      - FLASK_APP=pumps.py
      - FLASK_DEBUG=1
      - POSTGRES_PASSWORD
      - POSTGRES_USER
      - DATADOG_SERVICE_NAME=pumps-service
      - DATADOG_TRACE_AGENT_HOSTNAME=agent
      - DD_LOGS_INJECTION=true
      - DD_ANALYTICS_ENABLED=true
      #- DATADOG_TRACE_DEBUG=true
    build: ./pumps-api
    #image: "burningion/distributed-tracing-workshop-iot-devices:latest"
    command: ddtrace-run flask run --port=5001 --host=0.0.0.0
    ports:
      - "5001:5001"
    volumes:
      - "./pumps-api:/app"
    depends_on:
      - frontend
      - agent
      - db

  redis:
    image: "redis:5.0-rc4-alpine"
    ports:
        - "6379:6379"
    command: redis-server /usr/local/etc/redis/redis.conf
    volumes:
      - ./conf.d/redis.d/redis.conf:/usr/local/etc/redis/redis.conf
    depends_on:
      - agent

  sensors:
    environment:
      - FLASK_APP=sensors.py
      - FLASK_DEBUG=1
      - POSTGRES_PASSWORD
      - POSTGRES_USER
      - DATADOG_SERVICE_NAME=sensors-api
      - DATADOG_TRACE_AGENT_HOSTNAME=agent
      - DD_LOGS_INJECTION=true
      - DD_ANALYTICS_ENABLED=true
    #build: ./sensors
    image: "burningion/distributed-tracing-workshop-sensors-api:latest"
    command: ddtrace-run flask run --port=5002 --host=0.0.0.0
    ports:
      - "5002:5002"
    volumes:
      - "./sensors:/app"
    depends_on:
      - frontend
      - agent
      - db

  db:
    image: postgres:11-alpine
    restart: always
    depends_on:
      - agent
    environment:
      - POSTGRES_PASSWORD
      - POSTGRES_USER
